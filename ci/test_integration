#!/usr/bin/env bash
set -eox pipefail

source "./shared.sh"

# Navigate to the ci directory (where this script lives) to ensure we can run this script
# from anywhere.
cd "$(dirname "$0")"

services=(pg conjur proxy cli keycloak ldap-server)

# set the COMPOSE_PROJECT_NAME for the tests you'll be running
COMPOSE_PROJECT_NAME="$(openssl rand -hex 3)"

export REGISTRY_URL=${INFRAPOOL_REGISTRY_URL:-"docker.io"}
export COMPOSE_PROJECT_NAME

cleanup_and_dump_logs() {
  echo "Cleaning up... Saving container logs in cleanup.log"
  docker compose logs &> cleanup.log
  docker compose rm --stop --force
}

trap 'cleanup_and_dump_logs' EXIT

function main() {

  local conjur_account=dev
  local admin_initial_password='SuperSecret!!!!123'

  # Add the domain to the Identity service account we fetch from Atlantis
  if [[ -n "${INFRAPOOL_IDENTITY_USERNAME}" ]]; then
    export IDENTITY_USERNAME="${INFRAPOOL_IDENTITY_USERNAME}@cyberark.com"
    export IDENTITY_PASSWORD="${INFRAPOOL_IDENTITY_PASSWORD}"
  fi

  echo
  echo "Generating proxy certificates"
  ./conf/tls/generate_cert.sh

  echo
  echo "Starting Containers"
  docker compose up -d --no-deps "${services[@]}"

  echo
  _wait_for_pg pg

  echo
  wait_for_conjur

  echo
  echo 'Receiving INFRAPOOL image registry: ' $INFRAPOOL_REGISTRY_URL
  echo 'Using image registry for Conjur: ' $REGISTRY_URL

  echo
  echo 'Setting up Conjur...'
  docker compose exec -T conjur bundle exec rake "account:create_with_password[${conjur_account},${admin_initial_password}]"
  echo 'Finished setting up Conjur'

  echo
  echo 'Setting up Keycloak'
  configure_oidc_providers
  echo 'Finished setting up Keycloak'

  echo
  echo 'Fetching a JWT token'
  fetch_jwt
  echo 'Finished fetching a JWT token'

  generate_identity_policy

  docker compose exec -T cli make integration
}

main
