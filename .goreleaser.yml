project_name: conjur-cli-go

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
- id: conjur-cli-go
  main: ./cmd/conjur
  binary: conjur
  env:
  - CGO_ENABLED=0
  # Tag 'netgo' is a Go build tag that ensures a pure Go networking stack
  # in the resulting binary instead of using the default host's stack to
  # ensure a fully static artifact that has no dependencies.
  flags:
  - -tags=netgo
  - -a
  goos:
  - linux
  - darwin
  - windows
  goamd64:
   - v1
  # The `Tag` override is there to provide the git commit information in the
  # final binary. See `Static long version tags` in the `Building` section
  # of `CONTRIBUTING.md` for more information.
  ldflags:
    - -w
    - -X "github.com/cyberark/conjur-cli-go/pkg/version.Tag={{ .ShortCommit }}"
    - -X "github.com/cyberark/conjur-cli-go/pkg/version.Version={{ .Env.VERSION }}"
  hooks:
    post:
      # Copy the binary out into the <dist> path, and give the copy the name we want
      # in the release <extra_files>.
      # e.g. Suppose a windows amd64 build generates a binary at
      # path/to/binary.exe. This will be copied to
      # path/to/../binary-windows_amd64.exe. The copy path can then be added to
      # the release <extra_files> and will result in a release artifact with the name
      # binary-windows_amd64.exe.
      - mkdir -p "{{ dir .Path }}/../binaries"
      - cp "{{ .Path }}" "{{ dir .Path }}/../binaries/conjur_{{ .Target }}{{ .Ext }}"
- id: integration
  command: test
  main: ./cmd/integration
  binary: integration
  no_main_check: true
  env:
  - CGO_ENABLED=0
  # Tag 'netgo' is a Go build tag that ensures a pure Go networking stack
  # in the resulting binary instead of using the default host's stack to
  # ensure a fully static artifact that has no dependencies.
  flags:
  - -tags=netgo,dev,integration
  - -a
  - -c
  - -v
  goos:
  - linux
  goarch:
  - amd64
  goamd64:
  - v1

archives:
  - id: conjur-cli-go-archive
    builds: [conjur-cli-go]
    files:
      - CHANGELOG.md
      - LICENSE
      - README.md
    format_overrides:
      - goos: windows
        format: zip
    name_template: "{{.ProjectName}}_{{.Env.VERSION}}_{{.Os}}_{{.Arch}}"
    wrap_in_directory: true

checksum:
  name_template: 'SHA256SUMS.txt'

brews:
  - description: CyberArk Conjur command line interface (Golang)
    homepage: https://conjur.org
    url_template: https://github.com/cyberark/conjur-cli-go/releases/download/v{{.Env.VERSION}}/conjur-cli-go_{{.Env.VERSION}}_{{.Os}}_{{.Arch}}.tar.gz
    install: |
      bin.install "conjur"
    test: |
      system "#{bin}/conjur", "-version"
    tap:
      owner: cyberark
      name: homebrew-tools
    skip_upload: true

nfpms:
  - bindir: /usr/bin
    description: CyberArk Conjur command line interface (Golang)
    file_name_template: "{{.ProjectName}}_{{.Env.VERSION}}_{{.Arch}}"
    formats:
    - deb
    - rpm
    homepage: https://conjur.org
    license: "Apache 2.0"
    maintainer: CyberArk Maintainers <conj_maintainers@cyberark.com>
    vendor: CyberArk

snapshot:
  name_template: "{{ .Tag }}-next"

dist: dist/goreleaser/

release:
  disable: true
  draft: true
  extra_files:
    - glob: NOTICES.txt
    - glob: CHANGELOG.md
    - glob: LICENSE
    - glob: dist/goreleaser/binaries

